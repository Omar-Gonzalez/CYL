"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();!function(e,t){function n(){if(!a){a=!0;for(var e=0;e<r.length;e++)r[e].fn.call(window,r[e].ctx);r=[]}}function i(){"complete"===document.readyState&&n()}e=e||"docReady";var r=[],a=!1,s=!1;(t=t||window)[e]=function(e,t){if("function"!=typeof e)throw new TypeError("callback for docReady(fn) must be a function");a?setTimeout(function(){e(t)},1):(r.push({fn:e,ctx:t}),"complete"===document.readyState?setTimeout(n,1):s||(document.addEventListener?(document.addEventListener("DOMContentLoaded",n,!1),window.addEventListener("load",n,!1)):(document.attachEvent("onreadystatechange",i),window.attachEvent("onload",n)),s=!0))}}("docReady",window),Array.prototype.min=function(e){if(0===this.length)return null;if(1===this.length)return this[0];e=e||Math.min;for(var t=this[0],n=1;n<this.length;n++)t=e(this[n],t);return t},Array.prototype.max=function(e){if(0===this.length)return null;if(1===this.length)return this[0];e=e||Math.max;for(var t=this[0],n=1;n<this.length;n++)t=e(this[n],t);return t},Number.prototype.between=function(e,t){return this>e&&this<t},window.SCREEN=function(){var e=10,t=[100,100];e=window.innerWidth/100;var n=void 0,i=void 0;if(t){var r=(100-t[1])/2;document.getElementById("screen").style.marginTop=r+"%",n=t[0]+"%",i=t[1]+"%"}return{pixelSize:e,screen:{width:n,height:i}}},window.addEventListener("resize",function(){window.SCREEN()});var Scene=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];_classCallCheck(this,e),Array.isArray(t)?t.length<1?console.error("CYL:[Exception]Need at least one sprite to initialize a scene"):(this.screen=document.getElementById("screen"),this.canvas=document.getElementById("game"),this.ctx=this.canvas.getContext("2d"),this.sprites=t,this._defineCanvasDimensions()):console.error("CYL:[Exception]Update method requires an array of sprites")}return _createClass(e,[{key:"_defineCanvasDimensions",value:function(){var e=this;this.screen.style.width=SCREEN().screen.width,this.screen.style.height=SCREEN().screen.height,this.canvas.width=this.screen.offsetWidth,this.canvas.height=this.screen.offsetHeight,window.addEventListener("resize",function(){e.screen.style.width=SCREEN().screen.width,e.screen.style.height=SCREEN().screen.height,e.canvas.width=e.screen.offsetWidth,e.canvas.height=e.screen.offsetHeight})}},{key:"clear",value:function(){this.ctx.clearRect(0,0,this.frame.width,this.frame.height);var e=!0,t=!1,n=void 0;try{for(var i,r=this.sprites[Symbol.iterator]();!(e=(i=r.next()).done);e=!0){var a=i.value;a.renderedX=[],a.renderedY=[]}}catch(e){t=!0,n=e}finally{try{!e&&r.return&&r.return()}finally{if(t)throw n}}}},{key:"_renderPixel",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.ctx.fillStyle=t.color,this.ctx.fillRect(t.x+n,t.y+i,SCREEN().pixelSize,SCREEN().pixelSize),e.renderedX.push(t.x+n),e.renderedY.push(t.y+i)}},{key:"_renderShapeWith",value:function(e){var t=!0,n=!1,i=void 0;try{for(var r,a=e.currentFrame[Symbol.iterator]();!(t=(r=a.next()).done);t=!0){var s=r.value;this._renderPixel(e,s,e.x,e.y)}}catch(e){n=!0,i=e}finally{try{!t&&a.return&&a.return()}finally{if(n)throw i}}}},{key:"_sortShapeFrameWith",value:function(e){e.tickCounter>e.tick&&(e.tickCounter=0,e.currentFrameIndex++,e.currentFrameIndex>=e.frameCount&&(e.currentFrameIndex=0)),e.tickCounter++,this._renderShapeWith(e)}},{key:"_renderBitmapFrame",value:function(e){this.ctx.drawImage(e.currentFrame,e.x,e.y,e.currentFrame.width,e.currentFrame.height)}},{key:"_sortBitmapFrameWith",value:function(e){e.tickCounter>e.tick&&(e.tickCounter=0,e.currentFrameIndex++,e.currentFrameIndex>=e.frameCount&&(e.currentFrameIndex=0)),e.tickCounter++,this._renderBitmapFrame(e)}},{key:"update",value:function(){this.clear();var e=!0,t=!1,n=void 0;try{for(var i,r=this.sprites[Symbol.iterator]();!(e=(i=r.next()).done);e=!0){var a=i.value;"shape"===a.kind&&this._sortShapeFrameWith(a),"bitmap"===a.kind&&this._sortBitmapFrameWith(a)}}catch(e){t=!0,n=e}finally{try{!e&&r.return&&r.return()}finally{if(t)throw n}}}},{key:"setSprites",value:function(e){Array.isArray(e)?this.sprites=e:console.error("CYL:[Exception]Update method requires an array of sprites")}},{key:"frame",get:function(){return{width:this.canvas.width,height:this.canvas.height}}},{key:"assets",get:function(){return{spriteCount:this.sprites.length,sprites:this.sprites}}}]),e}(),ShapeSprite=function(){function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:20,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;_classCallCheck(this,e),void 0===t&&console.warn("CYL:Warning, no name identifier for sprite"),4===i&&console.warn("CYL:Warning, default 4 sprite size"),void 0!==n?Array.isArray(n)?(this.kind="shape",this.name=t,this.spriteFrames=[],this.width=i,this.x=s,this.y=o,this.currentFrameIndex=0,this.tick=r,this.tickCounter=0,this.shapes=n,this.activeAnimation="",this.renderedX=[],this.renderedY=[],this.contactGroup=a,this.setAnimation()):console.error("CYL:[Exception]Shape object must be an array"):console.error("CYL:[Exception]You need a shape to initialize a sprite")}return _createClass(e,[{key:"setAnimation",value:function(e){this.spriteFrames=[],this.activeAnimation=void 0===e?"idle":e;var t=0,n=!0,i=!1,r=void 0;try{for(var a,s=this.shapes[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var o=a.value;o.set===this.activeAnimation&&(this.mapFrameWith(o.shape),t++)}}catch(e){i=!0,r=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw r}}0!==t?this.frameCount=t:console.log("CYL:[Exception]No active sets in srite")}},{key:"mapFrameWith",value:function(e){var t=[],n=0,i=0,r=0,a=!0,s=!1,o=void 0;try{for(var h,c=e[Symbol.iterator]();!(a=(h=c.next()).done);a=!0){var d=h.value;t.push({x:n,y:i,color:d}),n+=SCREEN().pixelSize,++r===this.width&&(i+=SCREEN().pixelSize,n=0,r=0)}}catch(e){s=!0,o=e}finally{try{!a&&c.return&&c.return()}finally{if(s)throw o}}this.spriteFrames.push(t)}},{key:"inContactWith",value:function(e){var t=!1,n=!1;return(this.bounds.maxX.between(e.bounds.minX,e.bounds.maxX)||this.bounds.minX.between(e.bounds.minX,e.bounds.maxX))&&(t=!0),(this.bounds.maxY.between(e.bounds.minY,e.bounds.maxY)||this.bounds.minY.between(e.bounds.minY,e.bounds.maxY))&&(n=!0),!0===t&&!0===n?{inContact:!0,contactWith:this.name+" in contact with "+e.name}:{inContact:!1}}},{key:"inCollisionWith",value:function(e){var t=!1,n=!1;return(this.bounds.maxX.between(e.bounds.minX,e.bounds.maxX)||this.bounds.minX.between(e.bounds.minX,e.bounds.maxX))&&(t=!0),(this.bounds.maxY.between(e.bounds.minY,e.bounds.maxY)||this.bounds.minY.between(e.bounds.minY,e.bounds.maxY))&&(n=!0),!0===t&&!0===n?{inCollision:!0,collisionWith:this.name+" in collision with "+e.name}:{inCollision:!1}}},{key:"bounds",get:function(){return{maxX:this.renderedX.max(),minX:this.renderedX.min(),maxY:this.renderedY.max(),minY:this.renderedY.min()}}},{key:"currentFrame",get:function(){return this.spriteFrames[this.currentFrameIndex]}},{key:"frames",get:function(){return this.spriteFrames}}]),e}(),BitmapSprite=function(){function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:50,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:50,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:20,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,h=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0;_classCallCheck(this,e),void 0===t&&console.warn("CYL:Warning, no name identifier for sprite"),Array.isArray(n)?void 0!==n?(50===r&&50===i&&console.warn("CYL:Warning, bitmap sprite dimensions set to default 50x50"),this.kind="bitmap",this.name=t,this.bitmaps=n,this.width=i,this.height=r,this.x=o,this.y=h,this.tick=a,this.tickCounter=0,this.frameCount=0,this.currentFrameIndex=0,this.contactGroup=s,this.setAnimation()):console.error("CYL:[Exception]You need at least one bitmap to initialize a sprite"):console.error("CYL:[Exception]Bitmaps object must be an array")}return _createClass(e,[{key:"setAnimation",value:function(e){this.spriteFrames=[],this.activeAnimation=void 0===e?"idle":e;var t=0,n=!0,i=!1,r=void 0;try{for(var a,s=this.bitmaps[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var o=a.value;if(o.set===this.activeAnimation){var h=new Image;h.src=o.src,h.width=this.width,h.height=this.height,this.spriteFrames.push(h),t++}}}catch(e){i=!0,r=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw r}}0!==t?this.frameCount=t:console.error("CYL:[Exception]No active frames in srite")}},{key:"inContactWith",value:function(e){var t=!1,n=!1;return(this.bounds.maxX.between(e.bounds.minX,e.bounds.maxX)||this.bounds.minX.between(e.bounds.minX,e.bounds.maxX))&&(t=!0),(this.bounds.maxY.between(e.bounds.minY,e.bounds.maxY)||this.bounds.minY.between(e.bounds.minY,e.bounds.maxY))&&(n=!0),!0===t&&!0===n?{inContact:!0,contactWith:this.name+" in contact with "+e.name}:{inContact:!1}}},{key:"inCollisionWith",value:function(e){var t=!1,n=!1;return(this.bounds.maxX.between(e.bounds.minX,e.bounds.maxX)||this.bounds.minX.between(e.bounds.minX,e.bounds.maxX))&&(t=!0),(this.bounds.maxY.between(e.bounds.minY,e.bounds.maxY)||this.bounds.minY.between(e.bounds.minY,e.bounds.maxY))&&(n=!0),!0===t&&!0===n?{inCollision:!0,collisionWith:this.name+" in collision with "+e.name}:{inCollision:!1}}},{key:"setDimension",value:function(e,t){this.spriteFrames=[];var n=!0,i=!1,r=void 0;try{for(var a,s=this.bitmaps[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var o=a.value;if(o.set===this.activeAnimation){var h=new Image;h.src=o.src,h.width=e,h.height=e,this.spriteFrames.push(h)}}}catch(e){i=!0,r=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw r}}}},{key:"bounds",get:function(){return{maxX:this.width+this.x,minX:this.x,minY:this.y,maxY:this.height+this.y}}},{key:"currentFrame",get:function(){return this.spriteFrames[this.currentFrameIndex]}},{key:"frames",get:function(){return this.spriteFrames}}]),e}(),Game=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;_classCallCheck(this,e),Array.isArray(t)?(0===scene&&console.warn("CYL:Default initial scene with index 0 is being loaded"),this.scenes=t,this.active=n,this.shouldUpdate=!0,this.setActiveScene(),this.run=this.run.bind(this)):console.error("CYL:[Exception]Game requires an array of scenes")}return _createClass(e,[{key:"setActiveScene",value:function(e){void 0!==e&&(this.active=e),this.activeScene=this.scenes[this.active]}},{key:"run",value:function(){this.shouldUpdate&&(this.activeScene.update(),this.detectContact()),window.requestAnimationFrame(this.run)}},{key:"pause",value:function(){this.shouldUpdate?this.shouldUpdate=!1:this.shouldUpdate=!0}},{key:"spriteNamed",value:function(e){return this.activeScene.sprites.filter(function(t){return t.name===e})[0]}},{key:"detectContact",value:function(){var e=this.spriteNamed("cat").inContactWith(this.spriteNamed("enemy"));e.inContact&&console.log(e.contactWith)}},{key:"detectCollision",value:function(){var e=this.spriteNamed("player").inCollisionWith(this.spriteNamed("enemy")).inCollision;e.inCollision&&console.log(e.collisionWith)}},{key:"mouseClick",value:function(){var e=this;document.getElementById("game").addEventListener("click",function(t){e.spriteNamed("cat").x=t.clientX,e.spriteNamed("cat").y=t.clientY})}},{key:"keyDown",value:function(){var e=this;window.addEventListener("keydown",function(t){"ArrowLeft"===t.key&&(e.spriteNamed("player").x=e.spriteNamed("player").x-30),"ArrowRight"===t.key&&(e.spriteNamed("player").x=e.spriteNamed("player").x+30),"ArrowUp"===t.key&&(e.spriteNamed("player").y=e.spriteNamed("player").y-30),"ArrowDown"===t.key&&(e.spriteNamed("player").y=e.spriteNamed("player").y+30),"a"===t.key&&e.spriteNamed("player").setAnimation("moving"),"s"===t.key&&e.spriteNamed("player").setAnimation("idle")," "===t.key&&e.activeScene.detectCollision(),"p"===t.key&&e.pause()})}},{key:"assets",get:function(){return{scenes:this.scenes,activeScene:this.activeScene}}}]),e}(),idle1={set:"idle",shape:["transparent","white","white","transparent","red","white","red","white","white","white","white","white","red","red","red","white","transparent","white","white","transparent"]},idle2={set:"idle",shape:["transparent","white","white","transparent","white","red","white","red","white","white","white","white","white","red","red","red","transparent","white","white","transparent"]},moving1={set:"moving",shape:["transparent","white","white","transparent","white","red","white","red","white","white","white","white","white","red","red","red","white","white","white","white"]},moving2={set:"moving",shape:["white","white","white","white","red","white","red","white","white","white","white","white","red","red","red","white","transparent","white","white","transparent"]},player=new ShapeSprite("player",[idle1,idle2,moving1,moving2],4,20,"A"),eIdle1={set:"idle",shape:["orange","transparent","transparent","orange","orange","transparent","transparent","orange","transparent","orange","orange","transparent","transparent","transparent","transparent","transparent","transparent","transparent","transparent","transparent"]},eIdle2={set:"idle",shape:["transparent","transparent","transparent","transparent","transparent","transparent","transparent","transparent","transparent","orange","orange","transparent","orange","transparent","transparent","orange","orange","transparent","transparent","orange"]},enemy=new ShapeSprite("enemy",[eIdle1,eIdle2],4,10,"A"),catImg={set:"idle",src:"assets/cat-bat.png"},catImg2={set:"idle",src:"assets/cat-bat-alt.png"},cat=new BitmapSprite("cat",[catImg,catImg2],100,100),scene=new Scene([player,enemy,cat]);player.x=scene.frame.width/2,player.y=scene.frame.height/2,enemy.x=scene.frame.width/3,enemy.y=scene.frame.height/3,cat.x=.7*scene.frame.width,cat.y=scene.frame.height/3;var game=new Game([scene]);game.mouseClick(),game.keyDown(),game.run();
//# sourceMappingURL=crayola.min.js.map