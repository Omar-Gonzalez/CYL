"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}();window.log=function(e){console.log(e)};var Scene=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:800,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:600,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"center",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"#393f4c",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;_classCallCheck(this,e),this.width=t,this.height=a,this.pixelSize=r,this.alingment=i,this.bgColor=n,this.ctx={},this._placeGameContainer()}return _createClass(e,[{key:"msg",get:function(){return{noGameContainer:"CYL : No div with id game available to place canvas",wrongAlign:"CYL : Game container set to default center due to wrong alignment parameter",noSprites:"CYL : Update method requires an array of sprites"}}}]),_createClass(e,[{key:"_placeGameContainer",value:function(){var e=document.getElementById("game");if(null!==e){switch(e.style.width=this.width+"px",e.style.height=this.height+"px",e.style.backgroundColor="black",this.alingment.toLowerCase()){case"center":e.style.marginLeft="auto",e.style.marginRight="auto";break;case"left":e.style.marginLeft="0px";break;case"right":e.style.marginRight="0px",e.style.float="right";break;default:e.style.marginLeft="auto",e.style.marginRight="auto",log(this.msg.wrongAlign)}this._placeCanvas()}else log(this.msg.noGameContainer)}},{key:"_placeCanvas",value:function(){var e=document.createElement("canvas");e.width=this.width,e.height=this.height,e.style.position="absolute",e.style.backgroundColor=this.bgColor,document.getElementById("game").appendChild(e),this.ctx=e.getContext("2d")}},{key:"color",value:function(e){switch(e){case 0:return"transparent";case 1:return"white"}}},{key:"_drawPixel",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.ctx.fillStyle=this.color(e.color),this.ctx.fillRect(parseInt(e.x+t),parseInt(e.y+a),this.pixelSize,this.pixelSize)}},{key:"_drawSprite",value:function(e){var t=!0,a=!1,i=void 0;try{for(var n,r=e.shape[Symbol.iterator]();!(t=(n=r.next()).done);t=!0){var s=n.value;this._drawPixel(s,e.x,e.y)}}catch(e){a=!0,i=e}finally{try{!t&&r.return&&r.return()}finally{if(a)throw i}}}},{key:"clear",value:function(){this.ctx.clearRect(0,0,this.width,this.height)}},{key:"update",value:function(e){if(void 0!==e)if(Array.isArray(e)){this.clear();var t=!0,a=!1,i=void 0;try{for(var n,r=e[Symbol.iterator]();!(t=(n=r.next()).done);t=!0){var s=n.value;this._drawSprite(s)}}catch(e){a=!0,i=e}finally{try{!t&&r.return&&r.return()}finally{if(a)throw i}}}else log(this.msg.wrongShape);else console.log(this.msg.noShape)}}]),e}();window.scene=new Scene;var Sprite=function(){function e(t){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(_classCallCheck(this,e),void 0!==t)if(Array.isArray(t)){this.x=i,this.y=n,this.pixels=[];var r=0,s=0,o=0,l=!0,h=!1,c=void 0;try{for(var u,g=t[Symbol.iterator]();!(l=(u=g.next()).done);l=!0){var d=u.value;this.pixels.push({x:r,y:s,color:d}),r+=scene.pixelSize,++o===a&&(s+=scene.pixelSize,r=0,o=0)}}catch(e){h=!0,c=e}finally{try{!l&&g.return&&g.return()}finally{if(h)throw c}}}else log(this.msg.wrongShape);else console.log(this.msg.noArray)}return _createClass(e,[{key:"msg",get:function(){return{noShape:"CYL : You need a shape to initialize a sprite",wrongShape:"CYL : Shape object must be an array"}}}]),_createClass(e,[{key:"shape",get:function(){return this.pixels}}]),e}(),Game=function(){function e(){_classCallCheck(this,e),this.shouldUpdate=!0,this.sprites=[]}return _createClass(e,[{key:"msg",get:function(){return{pause:"CYL : Request Animation Frame is not updating",updating:"CYL : Request Animation Frame is updating",spritesParam:"CYL : Set sprites params can only take an array of sprites"}}}]),_createClass(e,[{key:"run",value:function(){!function(){if(game.shouldUpdate){var e=[],t=!0,a=!1,i=void 0;try{for(var n,r=game.sprites[Symbol.iterator]();!(t=(n=r.next()).done);t=!0){var s=n.value;e.push(s)}}catch(e){a=!0,i=e}finally{try{!t&&r.return&&r.return()}finally{if(a)throw i}}0!==e.length&&scene.update(e)}window.requestAnimationFrame(game.run)}()}},{key:"pause",value:function(){this.shouldUpdate?(this.shouldUpdate=!1,console.log(this.msg.pause)):(this.shouldUpdate=!0,console.log(this.msg.updating))}}]),e}();module.exports={Scene:Scene,Sprite:Sprite,Game:Game};
//# sourceMappingURL=crayola.min.js.map