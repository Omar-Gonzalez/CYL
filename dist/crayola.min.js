"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}(),Scene=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{width:"100%",height:"100%"};_classCallCheck(this,e),Array.isArray(t)?t.length<1?console.log("CYL:[Exception]Need at least one sprite to initialize a scene"):!1!==i.isInteger?(5===i&&console.log("CYL:Scene pixel size default of 5"),this.screen=document.getElementById("screen"),this.canvas=document.getElementById("game"),this.screenSize=r,this.pixelSize=i,this.ctx=this.canvas.getContext("2d"),this.sprites=t,this._defineCanvasDimensions()):console.log("CYL:[Exception]PixelSize must be a interger"):console.log("CYL:[Exception]Update method requires an array of sprites")}return _createClass(e,[{key:"_defineCanvasDimensions",value:function(){var e=this;this.screen.style.width=this.screenSize.width,this.screen.style.height=this.screenSize.height,this.canvas.width=this.screen.offsetWidth,this.canvas.height=this.screen.offsetHeight,window.addEventListener("resize",function(){e.canvas.width=e.screen.offsetWidth,e.canvas.height=e.screen.offsetHeight,console.log("CYL: Canvas resize: "+e.canvas.width)})}},{key:"clear",value:function(){this.ctx.clearRect(0,0,this.frame.width,this.frame.height)}},{key:"_renderPixel",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.ctx.fillStyle=e.color,this.ctx.fillRect(e.x+t,e.y+i,this.pixelSize,this.pixelSize)}},{key:"_renderShapeWith",value:function(e){var t=!0,i=!1,r=void 0;try{for(var n,s=e[Symbol.iterator]();!(t=(n=s.next()).done);t=!0){var a=n.value;this._renderPixel(a,sprite.x,sprite.y)}}catch(e){i=!0,r=e}finally{try{!t&&s.return&&s.return()}finally{if(i)throw r}}}},{key:"_sortFrameWith",value:function(e){e.tickCounter>e.tick&&(e.tickCounter=0,e.currentFrame++,e.currentFrame>=e.frameCount&&(e.currentFrame=0)),e.tickCounter++,this._renderShapeWith(e.frames[e.currentFrame])}},{key:"update",value:function(){this.clear();var e=!0,t=!1,i=void 0;try{for(var r,n=this.sprites[Symbol.iterator]();!(e=(r=n.next()).done);e=!0){var s=r.value;this._sortFrameWith(s)}}catch(e){t=!0,i=e}finally{try{!e&&n.return&&n.return()}finally{if(t)throw i}}}},{key:"setShapeSprites",value:function(e){Array.isArray(e)?this.sprites=e:console.log("CYL:[Exception]Update method requires an array of sprites")}},{key:"frame",get:function(){return{width:this.canvas.width,height:this.canvas.height}}},{key:"assets",get:function(){return{spriteCount:this.sprites.length,sprites:this.sprites}}}]),e}(),ShapeSprite=function(){function e(t,i){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:20,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(_classCallCheck(this,e),void 0===t&&console.log("CYL:Warning, no name identifier for sprite"),4===r&&console.log("CYL:Warning, default 4 sprite size, make sure you are passing width param"),void 0!==i)if(Array.isArray(i))if(void 0!==pixelSize){this.spriteName=t,this.spriteFrames=[],this.width=r,this.x=s,this.y=a,this.currentFrame=0,this.frameCount=i.length,this.tick=n,this.tickCounter=0;var o=!0,h=!1,l=void 0;try{for(var c,u=i[Symbol.iterator]();!(o=(c=u.next()).done);o=!0){var d=c.value;this.mapFrameWith(d)}}catch(e){h=!0,l=e}finally{try{!o&&u.return&&u.return()}finally{if(h)throw l}}}else console.log("CYL:[Exception]Please define global pixelSize value");else console.log("CYL:[Exception]Shape object must be an array");else console.log("CYL:[Exception]You need a shape to initialize a sprite")}return _createClass(e,[{key:"mapFrameWith",value:function(e){var t=[],i=0,r=0,n=0,s=!0,a=!1,o=void 0;try{for(var h,l=e[Symbol.iterator]();!(s=(h=l.next()).done);s=!0){var c=h.value;t.push({x:i,y:r,color:c}),i+=pixelSize,++n===this.width&&(r+=pixelSize,i=0,n=0)}}catch(e){a=!0,o=e}finally{try{!s&&l.return&&l.return()}finally{if(a)throw o}}this.spriteFrames.push(t)}},{key:"name",get:function(){return this.spriteName}},{key:"frames",get:function(){return this.spriteFrames}}]),e}(),Game=function(){function e(t){var i=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;_classCallCheck(this,e),this.run=function(){i.shouldUpdate&&i.activeScene.update(),window.requestAnimationFrame(i.run)},this.pause=function(){i.shouldUpdate?i.shouldUpdate=!1:i.shouldUpdate=!0},this.spriteNamed=function(e){var t=!0,r=!1,n=void 0;try{for(var s,a=i.activeScene.sprites[Symbol.iterator]();!(t=(s=a.next()).done);t=!0){var o=s.value;if(o.name)return o}}catch(e){r=!0,n=e}finally{try{!t&&a.return&&a.return()}finally{if(r)throw n}}},this.mouseClick=function(){document.getElementById("game").addEventListener("click",function(e){i.spriteNamed("player").x=e.clientX,i.spriteNamed("player").y=e.clientY})},this.keyPress=function(){window.addEventListener("keydown",function(e){"ArrowLeft"===e.key&&(i.spriteNamed("player").x=i.spriteNamed("player").x-30),"ArrowRight"===e.key&&(i.spriteNamed("player").x=i.spriteNamed("player").x+30),"ArrowUp"===e.key&&(i.spriteNamed("player").y=i.spriteNamed("player").y-30),"ArrowDown"===e.key&&(i.spriteNamed("player").y=i.spriteNamed("player").y+30)})},Array.isArray(t)?(0===scene&&console.log("CYL:Default initial scene with index 0 is being loaded"),this.scenes=t,this.active=r,this.shouldUpdate=!0,this.setActiveScene()):console.log("CYL:[Exception]Game requires an array of scenes")}return _createClass(e,[{key:"setActiveScene",value:function(e){void 0!==e&&(this.active=e),this.activeScene=this.scenes[this.active]}},{key:"assets",get:function(){return{scenes:this.scenes,activeScene:this.activeScene}}}]),e}(),pixelSize=5,screenSize={width:"100%",height:"100%"},shape1=["transparent","white","white","transparent","red","white","red","white","white","white","white","white","red","red","red","white","transparent","white","white","transparent"],shape2=["transparent","white","white","transparent","white","red","white","red","white","white","white","white","white","red","red","red","transparent","white","white","transparent"],sprite=new ShapeSprite("player",[shape1,shape2],4),scene=new Scene([sprite],pixelSize,screenSize),game=new Game([scene]);game.mouseClick(),game.keyPress(),game.run();
//# sourceMappingURL=crayola.min.js.map